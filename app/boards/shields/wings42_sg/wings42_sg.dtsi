/*
 * Copyright (c) 2022 KyouTansan
 * SPDX-License-Identifier: MIT
 */
#include <dt-bindings/zmk/matrix_transform.h>
/ {
	chosen {
		zmk,kscan = &kscan0;
		zmk,matrix_transform = &default_transform;
	};
	default_transform: keymap_transform_0 {
		compatible = "zmk,matrix-transform";
		columns = <14>;
		rows = <4>;
		map = <
RC(0,0) RC(0,1) RC(0,2) RC(0,3) RC(0,4) RC(0,5)  RC(0,6) RC(0,7)  RC(0,8) RC(0,9) RC(0,10) RC(0,11) RC(0,12) RC(0,13)
RC(1,0) RC(1,1) RC(1,2) RC(1,3) RC(1,4) RC(1,5)  RC(1,6) RC(1,7)  RC(1,8) RC(1,9) RC(1,10) RC(1,11) RC(1,12) RC(1,13)
RC(2,0) RC(2,1) RC(2,2) RC(2,3) RC(2,4) RC(2,5)  RC(2,6) RC(3,7)  RC(2,8) RC(2,9) RC(2,10) RC(2,11) RC(2,12) RC(2,13)
                        RC(3,3) RC(3,4) RC(3,5)  RC(3,6) RC(4,7)  RC(3,8) RC(3,9) RC(3,10)
		>;
	};
	kscan0: kscan0 {
		compatible = "zmk,kscan-composite";
		label = "KSCAN0";
		rows = <4>;
		columns = <14>;
		matrix1: matrix1 {	kscan = <&kscan1>;	column-offset = <0>;	};
	};
	kscan1: kscan1 {
		compatible = "zmk,kscan-gpio-matrix";
		label = "KSCAN1";
		diode-direction = "col2row";
		row-gpios
			= <&pro_micro 4 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>
			, <&pro_micro 5 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>
			, <&pro_micro 6 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>
			, <&pro_micro 7 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>
			;
	};
	kscan2: kscan2 {
		compatible = "zmk,kscan-gpio-matrix";
		label = "KSCAN2";
		status = "disabled";
	};
	kscan3: kscan3 {
		compatible = "zmk,kscan-gpio-matrix";
		label = "KSCAN3";
		status = "disabled";
	};
	direct_scan: direct_scan {
		compatible = "zmk,kscan-gpio-direct";
		label = "KSCANRRE";
		status = "disabled";
	};	
	right_encoder: encoder_right {
		compatible = "alps,ec11";
		label = "RIGHT_ENCODER";
		status = "disabled";
	};
	sensors: sensors {
		compatible = "zmk,keymap-sensors";
		sensors = <&right_encoder>;
		status = "disabled";
	};
	tpoint {
		compatible = "zmk,track-point";
		label = "TRACKPOINT";
		io-channels = <&adc 5>,<&adc 0>;
		output-ohms = <1000>;
		full-ohms = <(1000 + 345)>;
		power-gpios {
		    label = "ADC_POWER";
		    pin = <31>;
		    flags = <0>;
		    };
		power-gpios = <&gpio0 31 0>;
/*		power-gpios = <&gpio0 31 0x501>;		*/
/*		power-gpios = <&gpio0 31 GPIO_OUTPUT_ACTIVE>;*/
		/* 0x00000503 sense:0 drive:D0H1 pull:no pull input:disconnect dir:output*/
		/*#define GPIO_OUTPUT             (1U << 9)*/
		/*#define GPIO_OUTPUT_INIT_LOW    (1U << 10)*/
	};
};
